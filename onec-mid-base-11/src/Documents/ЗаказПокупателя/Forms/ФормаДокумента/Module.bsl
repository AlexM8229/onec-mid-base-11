
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры




#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура СогласованнаяСкидкаПриИзменении()
	
	// ++ Матяж АА 16.09.2025
	// Домашнее задание. Вопорос про скидку.
	Если Не ЗначениеЗаполнено(Объект.Товары) И Не ЗначениеЗаполнено(Объект.Услуги) Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = Ждать ВопросАсинх("Изменен процент скидки. Пересчитать таблицы товаров и услуг?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ПересчитатьТаблицуУслуги();
		ПересчитатьТаблицуТовары();
		
	КонецЕсли;
	// -- Матяж АА 16.09.2025
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// ++ Матяж АА 16.09.2025
	// Домашнее задание. Внесение изменения в формулу расчета
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	// Расчет суммы с учетом всех скидкок
	Скидка = ТекущиеДанные.Скидка / 100;
	СогласованнаяСкидка = Объект.СогласованнаяСкидка/100;
	СуммаСкидок = Скидка + СогласованнаяСкидка;
	
	Если СуммаСкидок > 1 Тогда
		ТекущиеДанные.Сумма = 0;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ("Сумма скидок превышает 100%");
		Сообщение.Сообщить();
	Иначе 
		ТекущиеДанные.Сумма = (ТекущиеДанные.Цена * ТекущиеДанные.Количество) - ТекущиеДанные.Цена * ТекущиеДанные.Количество * СуммаСкидок;
	КонецЕсли;
	// -- Матяж АА 16.09.2025
	
	РассчитатьСуммуДокумента();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицуУслуги()
	
	// ++ Матяж АА 16.09.2025
	// Домашнее задание. Пересчет таблиты Услуги
	Для каждого СтрокаТЧ Из Объект.Услуги Цикл
		
		РассчитатьСуммуСтроки(СтрокаТЧ);
		
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	// -- Матяж АА 16.09.2025
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицуТовары()
	
	// ++ Матяж АА 16.09.2025
	// Домашнее задание. Пересчет таблиты Товары
	
	Для каждого СтрокаТЧ Из Объект.Товары Цикл
		
		РассчитатьСуммуСтроки(СтрокаТЧ);
		
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	// -- Матяж АА 16.09.2025
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицу(Команда)
	
	// ++ Матяж АА 16.09.2025
	// Домашнее задание. Команда пересчета сумм
	ПересчитатьТаблицуУслуги();
	ПересчитатьТаблицуТовары();
	// -- Матяж АА 16.09.2025
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
